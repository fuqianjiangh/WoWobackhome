1、cocos2dx.v3使用了大量的c++11特性，简述c++11有哪些特性？
①对构造函数进行了改良，即允许构造函数调用其他的构造函数
②构造函数继承
③显示虚函数重载
④lambda表达式
⑤新增了std::function函数（类型安全）
⑥std::bind绑定的参数的个数不受限制
⑦智能指针（有效的缓解内存回收机制）
⑧boost::scopde_ptr 共享所有权，即类似于引用计数

2、简述quick中class是如何进行封装？
要想知道class是如何进行封装，必须清楚class的两个参数（classname 类名，super 父类或者创建对象实例的函数），从quick的底层代码可以看出，在class封装中创建了一个cls表，内部对传入的两个参数进行了判断，把类名加入到cls中，最终返回了cls这个表

3、简述背包实现过程？
①用cocos studio编写界面
②创建lua项目
③读取csb文件
④获取csb的控件
⑤创建module类，存储信息
⑥编写相关代码，实现功能

4、骨骼动画是如何进行换装？
①骨骼动画换装
②创建皮肤
③获取当前显示的皮肤的下标
④添加皮肤，下标一次增加
⑤替换皮肤层
⑥换装成功

5、简述module实现过程 ，import和require区别？
module的实现过程：
①创建module module("Data",package.seeall)，注意要继承自package.seeall
②写一些需要存储的数据以及方法

import和require区别：
import：载入模块时，如果模块前面有“.”时，会从当前模块所在目录中查找其他模块，所以当载入模块有所变动时，我们都不需要修改import（）命令
require：在载入模块时，其路径是写死了的，当载入的模块发生改变时，需要手动修改require（）命令

